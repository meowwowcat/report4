#set text(font : "HackGen")

#import "@preview/codelst:2.0.2": sourcecode
#import "@preview/codelst:2.0.2": sourcefile, 

#align(center)[コンピュータ実験レポート]
#align(right)[24cb0062h 菅原明]

= 課題22

== 方法

三次元空間($chi ^2,v,a$)において,ある点(para_v,para_x0)=(5,5)を出発点としてその点周りの$chi ^2$の値を計算し,その値で最も小さい値を示す点を選んでその点に移動する.
これらの移動の終了条件は,仮定した点よりも周りの点がすべて値が大きくなる場合である.\

課題22-0のコード
#sourcefile(read("22-1.c"),file:"22-1.c")
課題22-1のコード
#sourcefile(read("22-2.c"),file:"22-2.c")
= 結果
課題22-0の結果
#sourcefile(read("22-1.txt"),file:"22-1.txt")
課題22-1の結果
#sourcefile(read("22-2.txt"),file:"22-2.txt")

== 考察
課題16では,初期条件$(v_(x 0),x_0)=(5,10)$,$(v_(y 0),y_0)=(6.0,5.0)$としてあり,$(v_0,x_0,y_0)$,をパラメーターとしたとき,
$chi ^2$が最も小さくなるときの値(at best parameters)が$(v_(x 0),x_0)=(5,10)$,$(v_(y 0),y_0)=(6,5)$に近いためこの結果は正しい.

= 課題23

== 方法
課題22ではなるべく効率的に$chi ^2$を最低にするパラメーターを探索したが,
課題23では必ずしも効率は良くないが確実に最適化パラメーターを得られる方法として,
乱数生成を用いたモンテカルロ法による探索をする.
ある範囲に最適値があるはず,という探索範囲を設し,
この範囲内で乱数生成させ,この中から$chi ^2$の最低値を与えるパラメーターの
組み合わせを探し出す.例として課題23-0では56,57行目で範囲を設定している.\
\

課題23-0のコード
#sourcefile(read("23-0.c"),file:"23-0.c" )
課題23-1のコード
#sourcefile(read("23-1.c"),file:"23-1.c")
== 結果
課題23-0の結果
#sourcefile(read("23-0.txt"),file:"23-0.txt")
課題23-1の結果
#sourcefile(read("23-1.txt"),file:"23-1.txt")
== 考察
課題16での,初期条件と誤差がほとんどないためこの結果は妥当である.

= 課題24

= 方法
課題23では,$chi ^2$を最低にするパラメーターを探索したが,今回はそこから1だけ$chi ^2$が増える範囲を,乱数生成させて探索する.
この範囲がパラメーター誤差の範囲を表す.
$chi ^2 $の値が最低値よりも1大きい値よrい小さいときにのみ出力するようになっている(76行目).
課題24-0のコード
#sourcefile(read("24-0.c"),file:"24-0.c")
課題24-1のコード
#sourcefile(read("24-1.c"),file:"24-1.c")

= 結果

課題24-0の結果
#sourcefile(read("24-0.txt"),file:"24-0.txt")
課題24-1の結果
#sourcefile(read("24-1.txt"),file:"24-1.txt")

= 考察

得られた結果は課題16の初期条件との誤差がほとんどない.したがってこの結果は妥当である.
